16 bit
Registers: ax,bx,cx,dx, without x is low byte
	mov	ax,value16	0x0001 ~	3clk
	mov	bx,value16	0x0002 ~	3clk
	mov	cx,value16	0x0003 ~	3clk
	mov	dx,value16	0x0004 ~	3clk

	mov	ax,bx		0x0005 ~	2clk
	mov	ax,cx		0x0006 ~	2clk
	mov	ax,dx		0x0007 ~	2clk
	
	mov	bx,ax		0x0008 ~	2clk
	mov	bx,cx		0x0009 ~	2clk
	mov	bx,dx		0x000a ~	2clk

	mov	cx,ax		0x000b ~	2clk
	mov	cx,bx		0x000c ~	2clk
	mov	cx,dx		0x000d ~	2clk
	
	mov	dx,ax		0x000e ~	2clk
	mov	dx,bx		0x000f ~	2clk
	mov	dx,cx		0x0010 ~	2clk
	
Memory Access:
	mov	ax,[ax]		0x0011 ~	3clk
	mov	ax,[bx]		0x0012 ~	3clk
	mov	ax,[cx]		0x0013 ~	3clk
	mov	ax,[dx]		0x0014 ~	3clk
	
	mov	bx,[ax]		0x0015
	mov	bx,[bx]		0x0016
	mov	bx,[cx]		0x0017
	mov	bx,[dx]		0x0018

	mov	cx,[ax]		0x0019
	mov	cx,[bx]		0x001a
	mov	cx,[cx]		0x001b
	mov	cx,[dx]		0x001c

	mov	dx,[ax]		0x001d
	mov	dx,[bx]		0x001e
	mov	dx,[cx]		0x001f
	mov	dx,[dx]		0x0020

	mov	[ax],ax		0x0021
	mov	[ax],bx		0x0022
	mov	[ax],cx		0x0023
	mov	[ax],dx		0x0024

	mov	[bx],ax		0x0025
	mov	[bx],bx		0x0026
	mov	[bx],cx		0x0027
	mov	[bx],dx		0x0028

	mov	[cx],ax		0x0029
	mov	[cx],bx		0x002a
	mov	[cx],cx		0x002b
	mov	[cx],dx		0x002c

	mov	[dx],ax		0x002d
	mov	[dx],bx		0x002e
	mov	[dx],cx		0x002f
	mov	[dx],dx		0x0030
	
Arithmatic: src=src<Math Operation>reg
	add	ax,ax		0x0031
	add	ax,bx		0x0032
	add	ax,cx		0x0033
	add	ax,dx		0x0034

	add	bx,ax		0x0035
	add	bx,bx		0x0036
	add	bx,cx		0x0037
	add	bx,dx		0x0038

	add	cx,ax		0x0039
	add	cx,bx		0x003a
	add	cx,cx		0x003b
	add	cx,dx		0x003c
	
	add	dx,ax		0x003d
	add	dx,bx		0x003e
	add	dx,cx		0x003f
	add	dx,dx		0x0040

	sub	ax,bx		0x0041
	sub	ax,cx		0x0042
	sub	ax,dx		0x0043

	sub	bx,ax		0x0044
	sub	bx,cx		0x0045
	sub	bx,dx		0x0046

	sub	cx,ax		0x0047
	sub	cx,bx		0x0048
	sub	cx,dx		0x0049

	sub	dx,ax		0x004a
	sub	dx,bx		0x004b
	sub	dx,cx		0x004c

	Maybe multiplication and division instructions? 
	Possible float? (sounds like a cluster fuck)

Comparisons:
	cmp	ax,bx		0x004d
	cmp	ax,cx		0x004e
	cmp	ax,dx		0x004f

	cmp	bx,ax		0x0050
	cmp	bx,cx		0x0051
	cmp	bx,dx		0x0052

	cmp	cx,ax		0x0053
	cmp	cx,bx		0x0054
	cmp	cx,dx		0x0055

	cmp	dx,ax		0x0056
	cmp	dx,bx		0x0057
	cmp	dx,cx		0x0058
	
Jumps:

Boolean:
	
Graphics instructions:


Shifting Instructions:

	
	
	
	
